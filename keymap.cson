# Your keymap
#
# Atom keymaps work similarly to style sheets. Just as style sheets use
# selectors to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# 'atom-text-editor':
#   'enter': 'editor:newline'
#
# 'atom-workspace':
#   'ctrl-shift-p': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
# You can find more information about keymaps in these guides:
# * https://atom.io/docs/latest/using-atom-basic-customization#customizing-key-bindings
# * https://atom.io/docs/latest/behind-atom-keymaps-in-depth
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it here:
# https://github.com/bevry/cson#what-is-cson

'atom-text-editor, atom-workspace':
  'alt-cmd-p': 'advanced-open-file:toggle'

'atom-text-editor.vim-mode-plus-search':
  'cmd-enter': 'vim-mode-plus-user:project-find-from-search'

'body':
  'alt-j': 'pane:show-previous-item'
  'ctrl-left': 'pane:show-previous-item'
  'alt-k': 'pane:show-next-item'
  'ctrl-right': 'pane:show-next-item'

'.platform-darwin':
  'alt-p': 'tree-view:toggle-focus'

'.tree-view':
  'o': 'tree-view:open-selected-entry'

'atom-text-editor.vim-mode-plus.normal-mode':
  'y s': 'vim-mode-plus:surround'
  'd s': 'vim-mode-plus:delete-surround-any-pair-allow-forwarding'
  'c s': 'vim-mode-plus:change-surround-any-pair-allow-forwarding'
